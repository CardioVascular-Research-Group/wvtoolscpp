WVTools, C++ Implementation
v1.41 (updated Thursday, July 7th 2016)
Ran Liu (rliu14@jhu.edu)

A C++ utility to read data from Phillips 16-bit little-endian waveform files.
Allows for the generation of a PhysioNet header file.
Can also produce quality annotations.

Build Requirements:
CMake

Dependencies:
Boost C++ (Program_Options, Regex) (http://www.boost.org/)
GoogleTest (https://github.com/google/googletest)
JSON for Modern C++ (https://github.com/nlohmann/json)
restclient-cpp (https://github.com/mrtazz/restclient-cpp)
libcurl

Usage: wvtools [options]

Required options:
  -r [ --record ] arg   Record prefix of waveform data set

Operating modes:
  --version              Prints version information for the program
  -h [ --help ]          Prints program usage help
  --unscaled             Prints unscaled data. Scaled is the default, if no
                         operating mode is specified
  -p [ --physionet ]     Prints physionet header
  --checksum             Prints checksums for each channel
  --features             Emits feature vectors for specified channel
  --quality              Prints quality annotations for specified channel
  -n [ --num-channels ]  Prints number of channels contained in a record
  -t [ --tsdb ]          Uploads data and quality annotations to TSDB
  --tsdb-annotations     Uploads only quality annotations to TSDB
  --tsdb-check           Checks if a record is in TSDB already
  --tsdb-validate        Queries a record in TSDB and checks annotations and
                         data against local record

Program configurations:
  --no-headers             Omits header row when outputting data
  -s [ --svm ] arg         Specifies the file containing the parameters of the
                           SVM used for quality checking
  -x [ --channel ] arg     Specifies the index of a channel for modes that
                           operate on a single channel (0-indexed)
  -a [ --annotations ] arg Filename containing QRS onset annotations
  --tsdb-root arg          Url of OpenTSDB api root
  --chunk-size arg         Size of transmission chunk when uploading waveform
                           data to TSDB.
  --query-size arg         Size of transmission chunk when querying waveform
                           data in TSDB for validation.

Configuration file is /etc/wvtools.conf; All parameters in program configurations can be specified in this file.

Format:
# Line comments are denoted by the pound sign
channel=0
tsdb-root=http://localhost:3001
chunk-size=5000
query-size=5000